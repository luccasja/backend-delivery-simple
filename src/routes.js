const express = require('express')
const routes = express.Router()
const connection = require('./database')
const UsuarioController = require('./controllers/UsuarioController')
const ProdutoController = require('./controllers/ProdutoController')
const CategoriaController = require('./controllers/CategoriaController')
const PedidoController = require('./controllers/PedidoController')
const ItemController = require('./controllers/ItemController')
const SessionController = require('./controllers/SessionController')
const ParametroController = require('./controllers/ParametroController')
const LicenciadaController = require('./controllers/LicenciadaController')
const UploadController = require('./controllers/UploadController')
const BairroController = require('./controllers/BairroController')
const multer = require('multer');
const multerConfig = require('./config/multer')
const fs = require('fs')
const path = require('path')

routes.get('/',(request, response)=>{
    response.status(200).send('Seja bem-vindo ao Web Service Delivery UpSalles Homologação!')
})
//routes.get('/usuario', UsuarioController.read)
routes.post('/:key/usuario/auth', UsuarioController.auth)
//routes.post('/usuario', UsuarioController.insert)
//routes.put('/usuario/:id/update', UsuarioController.update)
//routes.delete('/usuario/:id', UsuarioController.delete)
// ZmluYW1hc3Nh
routes.get('/:key/produto', ProdutoController.read)
routes.get('/:key/produto/:id', ProdutoController.readByPK)
routes.get('/:key/produto/nome/:nome', ProdutoController.readByName)
routes.get('/:key/produto/nomeativo/:nome', ProdutoController.readByNameAtivos)
routes.get('/:key/produto/ativo/:situacao', ProdutoController.readAtivos)
routes.post('/:key/produto', ProdutoController.insert)
routes.put('/:key/produto/:id/update', ProdutoController.update)
routes.delete('/:key/produto/:id', ProdutoController.delete)
routes.get('/:key/pedido', PedidoController.read)
routes.get('/:key/pedido/:id', PedidoController.readByPk)
routes.get('/:key/pedido/data/:data_ini/:data_fim', PedidoController.readByDate)
routes.post('/:key/pedido', PedidoController.insert)
routes.put('/:key/pedido/:id/update', PedidoController.update)
routes.put('/:key/pedido/:id/registrar', PedidoController.registrarPedido)
routes.put('/:key/pedido/:id/receber', PedidoController.receberPedido)
routes.put('/:key/pedido/:id/reabrir', PedidoController.reabrir)
routes.delete('/:key/pedido/:id', PedidoController.delete)
routes.get('/:key/pedido/:id/itemfull', ItemController.readByPedidoFull)
routes.get('/:key/pedido/:id/item', ItemController.readByPedido)
routes.post('/:key/pedido/:id/item', ItemController.insert)
routes.put('/:key/pedido/:id/item', ItemController.update)
routes.delete('/:key/item/:id/', ItemController.delete)
routes.get('/:key/session', SessionController.read)
routes.put('/:key/session/:situacao', SessionController.update)
routes.post('/:key/session/:situacao', SessionController.insert)
routes.delete('/:key/session', SessionController.destroy)
routes.get('/:key/parametro', ParametroController.read)
routes.get('/:key/parametro/:id', ParametroController.readByName)
routes.post('/:key/parametro', ParametroController.insert)
routes.put('/:key/parametro/:nome', ParametroController.update)
routes.get('/:key/bairro', BairroController.readAll)
routes.get('/:key/bairro/ativo', BairroController.readAtivo)
routes.get('/:key/bairro/nome/:nome', BairroController.readAllName)
routes.put('/:key/bairro/:id', BairroController.update)
routes.post('/:key/bairro', BairroController.insert)
routes.get('/:key/categoria', CategoriaController.readAll)
routes.get('/:key/categoria/ativo', CategoriaController.readAtivo)
routes.get('/:key/categoria/nome/:nome', CategoriaController.readAllName)
routes.put('/:key/categoria/:id', CategoriaController.update)
routes.post('/:key/categoria', CategoriaController.insert)
routes.delete('/:key/categoria/:id', CategoriaController.destroy)
routes.get('/:key/licenciada', LicenciadaController.read)
routes.post('/:key/licenciada', multer(multerConfig).single('file'), LicenciadaController.insert)
routes.put('/:key/licenciada/:id', multer(multerConfig).single('file'), LicenciadaController.update)
routes.put('/:key/upload/:id', multer(multerConfig).single('file'), UploadController.update)
routes.post('/:key/upload/:id', multer(multerConfig).single('file'), UploadController.upload)
routes.post('/:key/img', multer(multerConfig).single('file'), (request, response)=>{
    console.log(request.file)
    //const path_file = path.resolve(__dirname, '..', 'public', 'img', 'c9d030e0d72b5c194602a2613f8beeaa-5 COISAS - Fashionismo.jpeg')

    //fs.unlink(path_file, (err) => {
    //    if (err) {
    //        console.error(err)
    //        return
    //    }
    //    console.log("Arquivo Removido")
    //    //file removed
    //})
})


module.exports = routes;